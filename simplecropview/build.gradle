apply plugin: 'com.android.library'

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
}

android {
  compileSdkVersion 28
  buildToolsVersion '28.0.2'

  defaultConfig {
    minSdkVersion 14
    targetSdkVersion 28
    versionCode 26
    versionName "1.1.8"
    consumerProguardFiles 'proguard-rules.pro'
  }

  dexOptions {
    preDexLibraries = false
  }
}

def file = project.rootProject.file('local.properties')
if (!file.exists()) return

task sourcesJar(type: Jar) {
  from android.sourceSets.main.java.srcDirs
  classifier = 'sources'
}

task javadoc(type: Javadoc) {
  source = android.sourceSets.main.java.srcDirs
  classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}
artifacts {
  archives javadocJar
  archives sourcesJar
}

task findConventions << {
  println project.getConvention()
}
